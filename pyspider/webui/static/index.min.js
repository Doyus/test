(()=>{"use strict";function t(t,r){var a="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!a){if(Array.isArray(t)||(a=function(t,r){if(t){if("string"==typeof t)return e(t,r);var a={}.toString.call(t).slice(8,-1);return"Object"===a&&t.constructor&&(a=t.constructor.name),"Map"===a||"Set"===a?Array.from(t):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?e(t,r):void 0}}(t))||r&&t&&"number"==typeof t.length){a&&(t=a);var n=0,s=function(){};return{s,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:s}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,i=!0,u=!1;return{s:function(){a=a.call(t)},n:function(){var t=a.next();return i=t.done,t},e:function(t){u=!0,o=t},f:function(){try{i||null==a.return||a.return()}finally{if(u)throw o}}}}function e(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,a=Array(e);r<e;r++)a[r]=t[r];return a}$((function(){function e(){$.get("/pyspider/counter",(function(e){for(var r in e){var a=e[r];if(void 0!==n.projects[r]){var s,o=t("5m,1h,1d,all".split(","));try{for(o.s();!(s=o.n()).done;){var i=s.value,u=a[i];if(void 0!==u){var l=u.pending||0,c=u.success||0,p=u.retry||0,d=u.failed||0,f=u.task||l+c+p+d;u.task=f,u.title=i+" of "+f+" tasks:\n"+("all"==i?"pending("+(l/f*100).toFixed(1)+"%): \t"+l+"\n":"new("+(l/f*100).toFixed(1)+"%): \t\t"+l+"\n")+"success("+(c/f*100).toFixed(1)+"%): \t"+c+"\nretry("+(p/f*100).toFixed(1)+"%): \t"+p+"\nfailed("+(d/f*100).toFixed(1)+"%): \t"+d}}}catch(t){o.e(t)}finally{o.f()}n.projects[r].paused=a.paused,n.projects[r].time=a["5m_time"],n.projects[r].progress=a}}}))}function r(){$.get("/pyspider/queues",(function(t){$(".queue_value").each((function(e,r){var a=$(r).attr("title");void 0!==t[a]?$(r).text(t[a]):$(r).text("???")}))}))}$("#create-project-modal form").on("submit",(function(t){t.preventDefault();var e=$(this),r=e.find("[name=class-name]").val(),a=e.find("[name=project-name]").val(),n=e.find("[name=start-urls]").val();if(function(t,e,r){return!(t.trim().length<=2||e.trim().length<=2||r.trim().length<=2||!r.includes("http"))}(r,a,n)){var s=window.location.origin;$.ajax({type:"POST",url:"/pyspider/debug/create_task",contentType:"application/json",data:JSON.stringify({project_name:a,class_name:r,start_urls:n}),success:function(t){var e=t[0];console.log("res",e),"ok"==e.status?window.location.href=s+"/pyspider/debug/"+e.project:alert("msg:"+e.message)},error:function(t){console.log("创建失败",t),alert("创建任务失败")}})}else alert("输入数据无效,请检查后重试")}));var a={};projects.forEach((function(t){t.paused=!1,t.time={},t.progress={},a[t.name]=t}));var n=new Vue({el:".projects",data:{projects:a},ready:function(){!function(t){$(".project-group>span").editable({name:"group",pk:function(t){return $(this).parents("tr").data("name")},emptytext:"[group]",placement:"right",url:"/pyspider/update",success:function(e,r){var a=$(this).parents("tr").data("name");t.projects[a].group=r,$(this).attr("style","")}}),$(".project-status>span").editable({type:"select",name:"status",source:[{value:"TODO",text:"TODO"},{value:"STOP",text:"STOP"},{value:"CHECKING",text:"CHECKING"},{value:"DEBUG",text:"DEBUG"},{value:"RUNNING",text:"RUNNING"}],pk:function(t){return $(this).parents("tr").data("name")},emptytext:"[status]",placement:"right",url:"/pyspider/update",success:function(e,r){var a=$(this).parents("tr").data("name");t.projects[a].status=r,$(this).removeClass("status-"+$(this).attr("data-value")).addClass("status-"+r).attr("data-value",r).attr("style","")}}),$(".project-rate>span").editable({name:"rate",pk:function(t){return $(this).parents("tr").data("name")},validate:function(t){var e=t.split("/");return 2!=e.length?"format error: rate/burst":$.isNumeric(e[0])&&$.isNumeric(e[1])?void 0:"format error: rate/burst"},highlight:!1,emptytext:"0/0",placement:"right",url:"/pyspider/update",success:function(e,r){var a=$(this).parents("tr").data("name"),n=r.split("/");t.projects[a].rate=parseFloat(n[0]),t.projects[a].burst=parseFloat(n[1]),$(this).attr("style","")}})}(this),Sortable.getColumnType=function(t,e){var r=$($(t).find("th").get(e)).data("type");return"num"==r?Sortable.types.numeric:"date"==r?Sortable.types.date:Sortable.types.alpha},$("table.projects").attr("data-sortable",!0),Sortable.init(),e(),window.setInterval(e,15e3),r(),window.setInterval(r,15e3)},methods:{project_run:function(t,e){$("#need-set-status-alert").hide(),"RUNNING"!=t.status&&"DEBUG"!=t.status&&$("#need-set-status-alert").show();var r=e.target;$(r).addClass("btn-warning"),$.ajax({type:"POST",url:"/pyspider/run",data:{project:t.name},success:function(t){$(r).removeClass("btn-warning"),t.result||$(r).addClass("btn-danger")},error:function(){$(r).removeClass("btn-warning").addClass("btn-danger")}})}}})}))})();